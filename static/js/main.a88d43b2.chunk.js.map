{"version":3,"sources":["consts.js","components/Employees.js","components/Birthday.js","App.js","index.js"],"names":["months","alphabet","Employees","data","checkedHandler","createSectionItem","letterSection","length","map","item","className","lastName","firstName","type","checked","onChange","id","letter","filter","Birthday","checkedData","parseDate","date","parsedDate","Date","parse","newDate","day","getDate","month","getMonth","year","getFullYear","createBirthdayItem","monthSection","index","dob","curVal","App","useState","setData","setCheckedData","useEffect","fetch","then","json","sort","a","b","nameA","toLowerCase","nameB","parsedStorageData","JSON","localStorage","getItem","newData","dataItem","find","parsedStorageDataItem","dates","checkedArray","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a88d43b2.chunk.js","sourcesContent":["export const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\r\n\"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nexport const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];","import React from 'react';\r\n\r\nimport { alphabet } from '../consts';\r\n\r\nconst Employees = ({ data, checkedHandler }) => {\r\n    \r\n    const createSectionItem = (letterSection) => {\r\n        return (\r\n            letterSection.length !== 0 ?\r\n                letterSection.map(item => {\r\n                    return (\r\n                        <div className='employees__item' key={item.id}>\r\n                            {item.lastName} {item.firstName}\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={item.checked ? true : false}\r\n                                onChange={() => checkedHandler(item)}\r\n                            ></input>\r\n                        </div>\r\n                    )\r\n                }) :\r\n                <div className='employees__item employees__item_empty'>-</div>\r\n        );\r\n    }\r\n    \r\n    const createSections = () => {\r\n        return (\r\n            alphabet.map((letter) => {\r\n                const letterSection = data.filter(item => item.lastName[0] === letter);\r\n                return (\r\n                    <div className='employees__section' key={letter}>\r\n                        <div className='employees__letter'>\r\n                            {letter}\r\n                        </div>\r\n                        <div className='employees__items'>\r\n                            {createSectionItem(letterSection)}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='employees'>\r\n            <div className='employees__header'>\r\n                Employees\r\n            </div>\r\n            <div className='employees__sections'>\r\n                {createSections()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Employees;","import React from 'react';\r\n\r\nimport { months } from '../consts';\r\n\r\nconst Birthday = ({ checkedData }) => {\r\n\r\n    const parseDate = (date) => {\r\n        const parsedDate = Date.parse(date),\r\n              newDate = new Date(parsedDate),\r\n              day = newDate.getDate(),\r\n              month = newDate.getMonth(),\r\n              year = newDate.getFullYear();\r\n\r\n        return (`${day} ${months[month]}, ${year} year`);\r\n    }\r\n\r\n    const createBirthdayItem = (monthSection, index) => {\r\n        \r\n        return (\r\n            monthSection.length !== 0 ?\r\n                <div className=\"birthday__section\">\r\n                    <div className='birthday__month'>\r\n                        {months[index]}\r\n                    </div>\r\n                    <ul className='birthday__items'>\r\n                        {monthSection.map(item => {\r\n                            return (\r\n                                <div className='birthday__item' key={item.id}>\r\n                                    {item.lastName} {item.firstName} - {parseDate(item.dob)}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div> :\r\n                null\r\n        )\r\n    }\r\n\r\n    const createBirthdaySections = () => {\r\n        return (\r\n            checkedData.length === 0 ?\r\n                <div>No selected employees</div> :\r\n                months.map((curVal, index) => {\r\n                    const monthSection = checkedData.filter(date => new Date(Date.parse(date.dob)).getMonth() === index);\r\n                    return(\r\n                        <div key={curVal}>\r\n                            {createBirthdayItem(monthSection, index)}\r\n                        </div>\r\n                    )\r\n                })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"birthday\">\r\n            <div className='birthday__header'>\r\n                Employees birthday\r\n            </div>\r\n            <div className=\"birthday__sections\">\r\n                {createBirthdaySections()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Birthday;\r\n\r\n","import React, { useState, useEffect } from 'react';\n\nimport Employees from './components/Employees';\nimport Birthday from './components/Birthday';\n\nimport './styles/App.sass';\n\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [checkedData, setCheckedData] = useState([]);\n\n    useEffect(() => {\n        fetch('https://yalantis-react-school-api.yalantis.com/api/task0/users')\n            .then(data => data.json())\n            .then(data => {\n                data.sort((a, b) => {\n                    const nameA = a.lastName.toLowerCase(),\n                          nameB = b.lastName.toLowerCase();\n                    if (nameA < nameB) {\n                        return -1;\n                    } else if (nameA > nameB) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                });\n\n                const parsedStorageData = JSON.parse(localStorage.getItem('checkedData'));\n\n                if (parsedStorageData) {\n                    setCheckedData(parsedStorageData);\n\n                    const newData = data.map(dataItem => {\n                        const indexData = parsedStorageData.find(parsedStorageDataItem => parsedStorageDataItem.id === dataItem.id);\n                        if (indexData) {\n                            return {...dataItem, checked: true}\n                        } else {\n                            return {...dataItem}\n                        }\n                    });\n                    setData(newData);\n                } else {\n                    setData(data);\n                }\n\t\t\t});\n    }, []);\n\n    const checkedArray = (newData) => {\n        return newData.filter(item => item.checked === true).sort((a, b) => {\n            const nameA = new Date(Date.parse(a.dob)).getMonth(),\n                nameB = new Date(Date.parse(b.dob)).getMonth();\n            if (nameA < nameB) {\n                return -1;\n            } else if (nameA > nameB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n    }\n\n    const checkedHandler = (item) => {\n        const newData = data.map(dataItem => {\n            if (dataItem.id === item.id) {\n                return {...dataItem, checked: !dataItem.checked}\n            } else if (dataItem.checked) {\n                return {...dataItem};\n            } else {\n                return {...dataItem, checked: false};\n            }\n        });\n        setData(newData);\n\n        const dates = checkedArray(newData);\n        setCheckedData(dates);\n\n        localStorage.setItem('checkedData', JSON.stringify(dates));\n    }\n\n\treturn (\n\t<div className=\"App\">\n\t\t<Employees\n\t\t\tdata={data}\n\t\t\tcheckedHandler={checkedHandler}\n\t\t/>\n\t\t<Birthday\n            checkedData={checkedData}\n\t\t/>\n\t</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}